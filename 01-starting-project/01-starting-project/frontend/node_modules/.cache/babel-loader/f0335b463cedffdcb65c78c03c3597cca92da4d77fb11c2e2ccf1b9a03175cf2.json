{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bestrada\\\\Documents\\\\Authentication-Practice\\\\01-starting-project\\\\01-starting-project\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport AuthForm from \"../components/AuthForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParmas = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n  if (mode !== \"login\" && mode != \"signup\") {\n    throw json({\n      message: \"Unsupported mode.\"\n    }, {\n      status: 422\n    });\n  }\n  const data = request.formData();\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\")\n  };\n  const response = await fetch(\"http://localhost:4000/\" + mode, {\n    method: \"POST\",\n    header: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParmas","URL","url","searchParams","mode","get","json","message","status","data","formData","authData","email","password","response","fetch","method","header","body","JSON","stringify","$RefreshReg$"],"sources":["C:/Users/bestrada/Documents/Authentication-Practice/01-starting-project/01-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from \"../components/AuthForm\";\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({ request }) {\n  const searchParmas = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n  if (mode !== \"login\" && mode != \"signup\") {\n    throw json({ message: \"Unsupported mode.\" }, { status: 422 });\n  }\n  const data = request.formData();\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\"),\n  };\n\n  const response = await fetch(\"http://localhost:4000/\" + mode, {\n    method: \"POST\",\n    header: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(authData),\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n}\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACxC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACC,YAAY;EACtD,MAAMC,IAAI,GAAGD,YAAY,CAACE,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAChD,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,IAAI,QAAQ,EAAE;IACxC,MAAME,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAoB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC/D;EACA,MAAMC,IAAI,GAAGV,OAAO,CAACW,QAAQ,CAAC,CAAC;EAC/B,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACJ,GAAG,CAAC,OAAO,CAAC;IACxBQ,QAAQ,EAAEJ,IAAI,CAACJ,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGX,IAAI,EAAE;IAC5DY,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACN,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC/B,CAAC,CAAC;EACF,IAAIG,QAAQ,CAACN,MAAM,KAAK,GAAG,IAAIM,QAAQ,CAACN,MAAM,KAAK,GAAG,EAAE;IACtD,OAAOM,QAAQ;EACjB;AACF;AAAC,IAAAjB,EAAA;AAAAwB,YAAA,CAAAxB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}